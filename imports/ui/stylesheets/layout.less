@import './utils.less';

// @menu-width: 270px;
// @column: 5.55555%;

html, body {
  height: 100%;
}

body {
  .position(absolute, 0, 0, 0, 0);
  background-color: #315481;
  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
  background-repeat: no-repeat;
  background-attachment: fixed;
}

#container {
  .position(absolute, 0, 0, 0, 0);

  // @media screen and (min-width: 60em) {
  //   left: @column;
  //   right: @column;
  // }

  // @media screen and (min-width: 80em) {
  //   left: 2*@column;
  //   right: 2*@column;
  // }

  // Hide anything offscreen
  overflow: hidden;
}

// #menu {
//   .position(absolute, 0, 0, 0, 0, @menu-width);
// }

.vertical-center {
  min-height: 100%;  /* Fallback for vh unit */
  min-height: 100vh; /* You might also want to use
                        'height' property instead.
                        
                        Note that for percentage values of
                        'height' or 'min-height' properties,
                        the 'height' of the parent element
                        should be specified explicitly.
  
                        In this case the parent of '.vertical-center'
                        is the <body> element */

  /* Make it a flex container */
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex; 
  
  /* Align the bootstrap's container vertically */
    -webkit-box-align : center;
  -webkit-align-items : center;
       -moz-box-align : center;
       -ms-flex-align : center;
          align-items : center;
  
  /* In legacy web browsers such as Firefox 9
     we need to specify the width of the flex container */
  width: 100%;
  
  /* Also 'margin: 0 auto' doesn't have any effect on flex items in such web browsers
     hence the bootstrap's container won't be aligned to the center anymore.
  
     Therefore, we should use the following declarations to get it centered again */
         -webkit-box-pack : center;
            -moz-box-pack : center;
            -ms-flex-pack : center;
  -webkit-justify-content : center;
          justify-content : center;
}

.jumbotron{ //Remove the default .jumbotron styles
  margin-bottom: 0;  //Remove the default bottom margin of .jumbotron 
  padding-top: 0px !important;
  padding-bottom: 0px !important;
  background-color: transparent; 
}

#content-container {
  // .position(absolute, 0, 0, 0, 0);
  transition: all 200ms ease-out;
  // transform: translate3d(0, 0, 0);
  // background: @color-tertiary;
  // opacity: 1;

  // .page {
  //   .position(absolute, 0, 0, 0, 0);
  // }

//   @media screen and (min-width: 40em) {
//     left: @menu-width;
//   }

//   .content-scrollable {
//     .position(absolute, 0, 0, 0, 0);
//     transform: translate3d(0, 0, 0);
//     overflow-y: auto;
//     -webkit-overflow-scrolling: touch;
//   }

//   // Toggle menu on mobile
//   .menu-open & {
//     transform: translate3d(@menu-width, 0, 0);
//     opacity: .85;
//     left: 0;

//     @media screen and (min-width: 40em) {
//       // Show menu on desktop, negate .menu-open
//       transform: translate3d(0, 0, 0); //reset transform and use position properties instead
//       opacity: 1;
//       left: @menu-width;
//     }
//   }
}

// Transparent screen to prevent interactions on content when menu is open
// .content-overlay {
//   .position(absolute, 0, 0, 0, 0);
//   cursor: pointer;

//   .menu-open & {
//     transform: translate3d(@menu-width, 0, 0);
//     z-index: 1;
//   }

//   // Hide overlay on desktop
//   @media screen and (min-width: 40em) { display: none; }
// }
